#!/bin/bash

# Define installation directory
INSTALL_DIR="$HOME/.brisk"

# Check if Nix is installed
if command -v "nix" >/dev/null 2>&1 ; then
  echo ""
else
  echo "Nix is not installed. Please install it before running this script."
  echo "You can install Nix using the following command:"
  echo "  curl -L https://nixos.org/nix/install | sh"
  exit 1
fi

# Define the GitHub repository and release information
GITHUB_REPO="karloscodes/brisk-installer"
RELEASE_TAG=${RELEASE_TAG:-"v1.0.0"}

# Check if wget or curl is available
DOWNLOADER=""
if command -v curl &> /dev/null; then
    DOWNLOADER="curl -L" 
elif command -v wget &> /dev/null; then
    DOWNLOADER="wget"
else
    echo "Both wget and curl are not available. Please install one of them."
    exit 1
fi

# Check the system architecture

ARCH="$(uname -s)-$(uname -m)"
case $ARCH in
    Linux-x86_64)
        PLATFORM="linux-x64"
        OS="linux"
        ;;
    Darwin-x86_64)
        PLATFORM="macos-x64"
        OS="macos"
        ;;
    Darwin-arm64|Darwin-aarch64)
        PLATFORM="macos-arm64"
        OS="macos"
        ;;
    *)
        echo "Unsupported architecture: $ARCH"
        exit 1
        ;;
esac

# Set the appropriate binary file name based on the platform
BINARY_NAME="brisk-$PLATFORM"

# Ensure the installation directory exists
mkdir -p "$INSTALL_DIR"

# Download the gzipped archive from the GitHub release using wget or curl

TEMP_DIR=$(mktemp -d)

$DOWNLOADER "https://github.com/$GITHUB_REPO/releases/download/$RELEASE_TAG/$BINARY_NAME.tar.gz" -o "$TEMP_DIR/$BINARY_NAME.tar.gz"

mkdir -p "$TEMP_DIR/unpack"

# Extract the archive
tar -xzvf "$TEMP_DIR/$BINARY_NAME.tar.gz" -C "$TEMP_DIR/unpack" >/dev/null 2>&1

# Copy the native executable to the installation directory

cp -a "$TEMP_DIR/unpack/$BINARY_NAME/." "$INSTALL_DIR/"
mv "$INSTALL_DIR/brisk-$OS" $INSTALL_DIR/brisk-bin

# Check if the copy was successful
if [ $? -eq 0 ]; then
    echo "Brisk installed successfully in $INSTALL_DIR"
else
    echo "Failed to install Brisk. Please check for errors."
    rm -rf "$TEMP_DIR"
    exit 1
fi

# Clean up temporary files
rm -rf "$TEMP_DIR"

# You can add post-installation steps here if needed

cat <<EOL >> $HOME/.brisk/brisk.zsh
# Save the original PS1 for restoration
if [[ -z "$ORIGINAL_PS1" ]]; then
  ORIGINAL_PS1="$PS1"
fi

export PATH="$HOME/.brisk/:$PATH"

precmd() {
  PS1="$ORIGINAL_PS1"
 
 # Check if the environment variable exists
  if [[ -n "$BRISK_SHELL" ]]; then
    # Prepend "*" to the prompt
    PS1="%F{yellow}%Bâœ¾ %b%f $PS1"
  fi
  export SHELL=$(which zsh)
}
EOL

ZSHRC_FILE="$HOME/.zshrc"
LINE_TO_ADD="[ -f ~/.brisk/brisk.zsh ] && source ~/.brisk/brisk.zsh"

if [ -f "$ZSHRC_FILE" ]; then
  # Check if the line already exists in ~/.zshrc
  if grep -Fxq "$LINE_TO_ADD" "$ZSHRC_FILE"; then
    echo ""
  else
    echo "$LINE_TO_ADD" >> "$ZSHRC_FILE"
    echo "Attatching brisk to your .zshrc"
  fi    
fi


echo "Installation complete..."

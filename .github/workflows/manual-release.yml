name: Manual workflow

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Tag to deploy'
        required: true
        default: 'latest'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    # Download binaries from the private repo
    - name: Download binaries
      run: |
        curl -s https://api.github.com/repos/jgm/pandoc/releases/latest \
          | grep "browser_download_url.*deb" \
          | cut -d : -f 2,3 \
          | tr -d \" \
          | wget -qi -

        curl -L -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -o brisk-macos-x64 "https://github.com/karloscodes/brisk-sh/releases/download/${{ github.event.inputs.name }}/brisk-macos-x64"
        curl -L -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -o brisk-macos-arm64 "https://github.com/karloscodes/brisk-sh/releases/download/${{ github.event.inputs.name }}/brisk-macos-arm64"
        curl -L -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" -o brisk-linux-x64 "https://github.com/karloscodes/brisk-sh/releases/download/${{ github.event.inputs.name }}/brisk-linux-x64"
        ls -lha

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        token: ${{ secrets.GH_TOKEN }}
        files: |
          scripts/install
          brisk-linux-x64
          brisk-macos-x64
          brisk-macos-arm64

    # # Create a new GitHub release
    # - name: Create GitHub Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   with:
    #     tag_name: ${{ github.event.inputs.name }}
    #     release_name: Release ${{ github.event.inputs.name }}
    #     token: ${{ secrets.GH_TOKEN }}

    # # Upload binaries to the newly created release
    # - name: Upload macos-x64
    #   id: upload-macos-x64
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     release_id: ${{ steps.create_release.outputs.id }}
    #     asset_path: ./brisk-macos-x64
    #     asset_name: brisk-macos-x64
    #     asset_content_type: application/octet-stream
    #     token: ${{ secrets.GH_TOKEN }}

    # - name: Upload macos-arm64
    #   id: upload-macos-arm64
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     release_id: ${{ steps.create_release.outputs.id }}
    #     asset_path: ./brisk-macos-arm64
    #     asset_name: brisk-macos-arm64
    #     asset_content_type: application/octet-stream
    #     token: ${{ secrets.GH_TOKEN }}

    # - name: Upload linux-x64
    #   id: upload-linux-x64
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     release_id: ${{ steps.create_release.outputs.id }}
    #     asset_path: ./brisk-linux-x64
    #     asset_name: brisk-linux-x64
    #     asset_content_type: application/octet-stream
    #     token: ${{ secrets.GH_TOKEN }}

    # - name: Upload install
    #   id: upload-install-script
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     release_id: ${{ steps.create_release.outputs.id }}
    #     asset_path: ./scripts/install
    #     asset_name: install
    #     asset_content_type: text/x-shellscript
    #     token: ${{ secrets.GH_TOKEN }}
